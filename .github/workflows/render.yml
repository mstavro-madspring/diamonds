name: Deploy Quarto project to GitHub Pages

on:
  push:
    branches: ["main"]

# Grant GITHUB_TOKEN the necessary permissions
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs, as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # Set up Quarto and R dependencies
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
      - name: Explicitly install libcurl on the runner
        run: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev
      - name: Setup R Dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2
      
      # Render the Quarto project
      - name: Render Quarto file
        run: quarto render index.qmd

      # The default output directory for a Quarto document is the same directory.
      # Create an artifact with the content to deploy.
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Note: The path here might need to be adjusted if you use a
          # Quarto project instead of a single document.
          path: .

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
